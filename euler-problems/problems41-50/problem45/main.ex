defmodule Problem do
  # Triangle, pentagonal, and hexagonal numbers are generated by the following formulae:
  # Triangle 	  	Tn=n(n+1)/2 	  	1, 3, 6, 10, 15, ...
  # Pentagonal 	  	Pn=n(3n−1)/2 	  	1, 5, 12, 22, 35, ...
  # Hexagonal 	  	Hn=n(2n−1) 	  	1, 6, 15, 28, 45, ...
  # It can be verified that T285 = P165 = H143 = 40755.
  # Find the next triangle number that is also pentagonal and hexagonal.
  # Result: 1533776805

  def check(f, v) do
    l =
      Stream.iterate(1, &(&1 + 1))
      |> Stream.map(f)
      |> Stream.take_while(&(&1 <= v))
      |> Enum.at(-1)

    l == v
  end

  def solve do
    f1 = fn x -> x * (3 * x - 1) end
    f2 = fn y -> 2 * y * (2 * y - 1) end

    r =
      Stream.iterate(286, &(&1 + 1))
      |> Stream.map(fn n -> n * (n + 1) end)
      |> Enum.find(fn v -> check(f1, v) && check(f2, v) end)

    div(r, 2)
  end

  def main do
    IO.puts(solve())
  end
end
