/**
 * Each new term in the Fibonacci sequence is generated by adding the previous two terms.
 * By starting with 1 and 2, the first 10 terms will be:
 * 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
 * By considering the terms in the Fibonacci sequence whose values do not exceed four million,
 * find the sum of the even-valued terms.
 * Result: 4613732
 */

int solve1() {
  int f1 = 0;
  int f2 = 1;
  int f = 2;
  int sum = 0;

  while (f <= 4000000) {
    if (f % 2 == 0) {
      sum += f;
    }

    f1 = f2;
    f2 = f;
    f = f1 + f2;
  }

  return sum;
}

solve2() {
  final fibonacci = () sync* {
    int f1 = 0;
    int f2 = 1;
    int f = 2;

    while (true) {
      yield f;
      f1 = f2;
      f2 = f;
      f = f1 + f2;
    }
  };
  return fibonacci()
      .takeWhile((f) => f < 4000000)
      .where((i) => i % 2 == 0)
      .reduce((acc, e) => acc + e);
}

main(List<String> arguments) {
  print(solve1());
  print(solve2());
}
